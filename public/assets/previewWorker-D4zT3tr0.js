(function(){"use strict";const h={TITLE:new RegExp(String.raw`^(?:(title|credit|author|authors|writer|writers|written\s+by|screenplay\s+by|teleplay\s+by|story\s+by|adaptation\s+by|source|based\s+on(?:\s+characters\s+by)?|notes|draft(?:\s+date)?|revision(?:\s+date|(?:\s+)?color)?|draft\s*#|date|contact|copyright|wga(?:\s+registration)?|registration(?:\s*#)?|series|episode(?:\s+title)?|showrunner|production(?:\s+company)?)\s*):\s*`,"i")};function x(g){const u=(g||"").split(`
`),c=[];let d=1,a={character_extended:!1,note:!1};const y=new Set,p=new Map;let i=null;for(let l=0;l<u.length;l++){const n=u[l],t=n.trim();if(!t){a.character_extended=!1,c.push({id:`line-${l}`,text:n,index:l,type:"blank",className:"blank-line",speaker:null});continue}let e="action",s="action",m=i;if(a.note)t.includes("]]")&&(a.note=!1),e="note",s="note";else if(t.includes("[["))a.note=!t.includes("]]"),e="note",s="note";else if(/^(INT\.|EXT\.|EST\.|I\/E\.|\.)/i.test(t))a.character_extended=!1,e="scene",s="scene-heading";else if(/^(FADE IN:|FADE OUT\.|FADE TO BLACK\.|CUT TO:|CUT TO BLACK\.|DISSOLVE TO:|SMASH CUT TO:)/.test(t)||/TO:$/.test(t))a.character_extended=!1,e="transition",s="transition";else if(/^[A-Z][A-Z0-9#\.\'\-\s]*(\^)?$/.test(t)&&t.replace("^","").length<50&&t.length>1||/^@.+$/.test(t)){a.character_extended=!0,t.includes("^")?(e="dual_character",s="dual-character"):(e="character",s="character"),m=t,i=t;const r=t.replace(/[@^]/g,"").trim().toUpperCase();y.add(r),p.has(r)||p.set(r,0)}else if(a.character_extended)if(/^\(.*\)$/.test(t))e="parenthetical",s="parenthetical";else{e="dialogue",s="dialogue";const r=i||m;if(r){const f=r.replace(/[@^]/g,"").trim().toUpperCase();p.has(f)&&p.set(f,p.get(f)+1)}}else if(/^= /.test(t))a.character_extended=!1,i=null,e="synopsis",s="synopsis";else if(/^~ /.test(t))a.character_extended=!1,i=null,e="lyrics",s="lyrics";else if(/^- /.test(t))a.character_extended=!1,i=null,e="milestone",s="milestone";else if(/^\d{1,2}:\d{2}$/.test(t))a.character_extended=!1,i=null,e="duration",s="duration";else if(/^\[i\]https?:\/\/.+/i.test(t))a.character_extended=!1,i=null,e="image",s="image";else if(/^\[a\]https?:\/\/.+/i.test(t))a.character_extended=!1,i=null,e="audio",s="audio";else if(h&&h.TITLE&&h.TITLE.test(t)){a.character_extended=!1;const r=t.match(h.TITLE);r&&(r[1].toLowerCase()==="title"?(e="title",s="title-page-title"):(e="title_page",s="title-page-element"))}else if(/^#{1,4}\s/.test(t)){a.character_extended=!1;const r=t.match(/^(#{1,4})/)[1].length;e="section",s=`section-${r}`}else/^={3,}$/.test(t)?(a.character_extended=!1,c.push({id:`page-number-${l}`,text:`<div class="page-number">${d}</div>`,index:l,type:"page_number",className:"page-number",speaker:null}),d++,e="page_break",s="page-break"):/^>.+<$/.test(t)?(a.character_extended=!1,e="centered",s="centered"):(a.character_extended=!1,i=null,e="action",s="action");let o=n;if(e==="title")o=n.replace(/^title:\s*/i,"");else if(e==="title_page"){const r=n.match(/^([^:]+):\s*(.*)/);r&&(o=`<strong>${r[1]}:</strong> ${r[2]}`)}else e==="image"?o=`<img src="${n.replace(/^\[i\]/i,"")}" alt="Storyboard image" style="max-width: 100%; height: auto; border: 1px solid #ccc; margin: 0.5em 0;" />`:e==="audio"?o=`<audio controls style="width: 100%; margin: 0.5em 0;"><source src="${n.replace(/^\[a\]/i,"")}" type="audio/mpeg">Your browser does not support the audio element.</audio>`:e==="page_break"?o="<hr />":e==="transition"?o=n.replace(/^> /,""):e==="character"||e==="dual_character"?o=n.replace(/^@/,""):e==="scene"?o=n.replace(/^\./,""):e==="centered"&&(o=`> ${n.replace(/^>|<$/g,"")} <`);c.push({id:`line-${l}`,text:o,index:l,type:e,className:s,speaker:m})}c.length>0&&c[c.length-1].type!=="page_break"&&c.push({id:"final-page-number",text:`<div class="page-number">${d}</div>`,index:u.length,type:"page_number",className:"page-number",speaker:null});const b=Array.from(y).sort(),_=new Map(Array.from(p.entries()).sort((l,n)=>l[0].localeCompare(n[0])));return{blocks:c,characters:b,characterLineCounts:_}}self.onmessage=function(g){const{type:u,text:c}=g.data;if(u==="process")try{const d=x(c);self.postMessage({type:"result",blocks:d.blocks,characters:d.characters,characterLineCounts:d.characterLineCounts})}catch(d){self.postMessage({type:"error",message:String(d)})}}})();
