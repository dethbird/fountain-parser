(function(){"use strict";function f(o){const c=o.split(`
`),l=[];let t={character_extended:!1,note:!1};for(let n=0;n<c.length;n++){const i=c[n],e=i.trim();if(!e){t.character_extended=!1,l.push({id:`line-${n}`,text:i,index:n,type:"blank",className:"blank-line",speaker:null});continue}let s="action",a="action",d=null;if(t.note)e.includes("]]")&&(t.note=!1),s="note",a="note";else if(e.includes("[["))t.note=!e.includes("]]"),s="note",a="note";else if(/^(INT\.|EXT\.|EST\.|I\/E\.|\.)/i.test(e))t.character_extended=!1,s="scene",a="scene-heading";else if(/^(FADE IN:|FADE OUT\.|CUT TO:|DISSOLVE TO:|SMASH CUT TO:)/.test(e)||/TO:$/.test(e))t.character_extended=!1,s="transition",a="transition";else if(/^[A-Z][A-Z\s]*(\^)?$/.test(e)&&e.replace("^","").length<50&&e.length>1&&!e.includes(".")&&!e.includes(",")&&!e.includes("!")&&!e.includes("?"))t.character_extended=!0,s="character",a="character",d=e;else if(t.character_extended)/^\(.*\)$/.test(e)?(s="parenthetical",a="parenthetical"):(s="dialogue",a="dialogue");else if(/^= /.test(e))t.character_extended=!1,s="synopsis",a="synopsis";else if(/^~ /.test(e))t.character_extended=!1,s="lyrics",a="lyrics";else if(/^- /.test(e))t.character_extended=!1,s="milestone",a="milestone";else if(/^(title|credit|author[s]?|source|notes|draft date|date|contact|copyright):/i.test(e)){t.character_extended=!1;const r=e.match(/^(title|credit|author[s]?|source|notes|draft date|date|contact|copyright):/i);r&&(r[1].toLowerCase()==="title"?(s="title",a="title-page-title"):(s="title_page",a="title-page-element"))}else if(/^#{1,4}\s/.test(e)){t.character_extended=!1;const r=e.match(/^(#{1,4})/)[1].length;s="section",a=`section-${r}`}else/^={3,}$/.test(e)?(t.character_extended=!1,s="page_break",a="page-break"):(t.character_extended=!1,s="action",a="action");l.push({id:`line-${n}`,text:s==="title"?i.replace(/^title:\s*/i,""):i,index:n,type:s,className:a,speaker:d})}return console.log("Final blocks:",l.map(n=>`${n.index}: "${n.text.trim()}" -> ${n.type}`)),l}self.onmessage=function(o){const{type:c,text:l}=o.data;if(c==="process"){const t=f(l);self.postMessage({type:"result",blocks:t})}}})();
