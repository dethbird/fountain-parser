(function(){"use strict";function d(c){const i=c.split(`
`),a=[];let t={character_extended:!1,note:!1};for(let s=0;s<i.length;s++){const o=i[s],e=o.trim();if(!e){t.character_extended=!1,a.push({id:`line-${s}`,text:o,index:s,type:"blank",className:"blank-line",speaker:null});continue}let n="action",l="action",r=null;t.note?(e.includes("]]")&&(t.note=!1),n="note",l="note"):e.includes("[[")?(t.note=!e.includes("]]"),n="note",l="note"):/^(INT\.|EXT\.|EST\.|I\/E\.|\.)/i.test(e)?(t.character_extended=!1,n="scene",l="scene-heading"):/^(FADE IN:|FADE OUT\.|CUT TO:|DISSOLVE TO:|SMASH CUT TO:)/.test(e)||/TO:$/.test(e)?(t.character_extended=!1,n="transition",l="transition"):/^[A-Z][A-Z\s]*$/.test(e)&&e.length<50&&e.length>1&&!e.includes(".")&&!e.includes(",")&&!e.includes("!")&&!e.includes("?")?(t.character_extended=!0,n="character",l="character",r=e):t.character_extended?/^\(.*\)$/.test(e)?(n="parenthetical",l="parenthetical"):(n="dialogue",l="dialogue"):/^= /.test(e)?(t.character_extended=!1,n="synopsis",l="synopsis"):(t.character_extended=!1,n="action",l="action"),a.push({id:`line-${s}`,text:o,index:s,type:n,className:l,speaker:r})}return console.log("Final blocks:",a.map(s=>`${s.index}: "${s.text.trim()}" -> ${s.type}`)),a}self.onmessage=function(c){const{type:i,text:a}=c.data;if(i==="process"){const t=d(a);self.postMessage({type:"result",blocks:t})}}})();
